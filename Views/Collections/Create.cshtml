@model ButterflyWebsite.Models.Collection

@{
    ViewData["Title"] = "Create";
}
    <head>
        <style>
            /* Set the size of the div element that contains the map */
            #map {
                height: 400px; /* The height is 400 pixels */
                width: 100%; /* The width is the width of the web page */
            }
        </style>
    </head>
<h2>Create</h2>

<h4>Collection</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="CommonName" class="control-label"></label>
                <input asp-for="CommonName" class="form-control" />
                <span asp-validation-for="CommonName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LatinName" class="control-label"></label>
                <input asp-for="LatinName" class="form-control" />
                <span asp-validation-for="LatinName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CatchDate" class="control-label"></label>
                <input asp-for="CatchDate" class="form-control" />
                <span asp-validation-for="CatchDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Sex" class="control-label"></label>
                <input asp-for="Sex" class="form-control" />
                <span asp-validation-for="Sex" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Latitude" class="control-label"></label>
                <input asp-for="Latitude" class="form-control" />
                <span asp-validation-for="Latitude" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Longitude" class="control-label"></label>
                <input asp-for="Longitude" class="form-control" />
                <span asp-validation-for="Longitude" class="text-danger"></span>
            </div>
            <!--The div element for the map -->
            <div id="map"></div>
            <script>
            // Initialize and add the map
            function initMap() {
                // The location of Uluru
                let uluru = {lat: -25.344, lng: 131.036};
                // The map, centered at Uluru
                let map = new google.maps.Map(
                document.getElementById('map'), {zoom: 4, center: uluru});
                // The marker, positioned at Uluru
                let marker = new google.maps.Marker({position: uluru, map: map});
            }
            </script>
            <!--Load the API from the specified URL
                 * The async attribute allows the browser to render the page while the API loads
                 * The key parameter will contain your own API key (which is not needed for this tutorial)
                 * The callback parameter executes the initMap() function
                 -->
            <script async defer
                    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyChJkt4hosJN2TUFXOTQSuMWBdXUr6vBZw&callback=initMap">
            </script>
            <div class="form-group">
                <label asp-for="ImagePath" class="control-label"></label>
                <input asp-for="ImagePath" class="form-control" />
                <span asp-validation-for="ImagePath" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
